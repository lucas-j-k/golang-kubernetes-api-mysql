# https://taskfile.dev

version: '3'

tasks:

    ###################################################
    # Config 
    ###################################################
    start-cluster:
      desc: Start KinD cluster
      cmds:
      - bash ./bash/cluster-setup.sh
    
    apply-ingress:
      desc: Apply NginX ingress
      cmds:
      - kubectl apply -f ./manifests/config/ingress.yaml
    
    apply-config:
      desc: Apply config setup manifests
      cmds:
      - kubectl apply -f ./manifests/config/namespace-go.yaml
      - kubectl apply -f ./manifests/config/namespace-mysql.yaml
      - kubectl apply -f ./manifests/config/secret.yaml
    
    ###################################################
    # Service Builds
    ###################################################
    build-user:
        desc: Build and push the docker image for user service
        cmds: 
        - docker build -t localhost:5001/go_kube_user_service:latest ./user_service
        - docker push localhost:5001/go_kube_user_service:latest
    build-notes:
        desc: Build and push the docker image for notes service
        cmds: 
        - docker build -t localhost:5001/go_kube_notes_service:latest ./notes_service
        - docker push localhost:5001/go_kube_notes_service:latest

    ###################################################
    # Service Deploy
    ###################################################
    deploy-user:
        desc: Deploy user service yaml files
        cmds: 
        - kubectl apply -f ./manifests/user-service/deployment.yaml
        - kubectl apply -f ./manifests/user-service/service.yaml
    deploy-notes:
        desc: Deploy notes service yaml files
        cmds: 
        - kubectl apply -f ./manifests/note-service/deployment.yaml
        - kubectl apply -f ./manifests/note-service/service.yaml

    ###################################################
    # Contour Helm
    ###################################################
    deploy-contour:
        desc: Deploy Contour Ingress proxy
        cmds: 
        - helm install my-release bitnami/contour --namespace projectcontour --create-namespace
    deploy-routes:
        desc: Deploy Contour Ingress routes
        cmds: 
        - kubectl apply -f manifests/config/contour-ingress.yaml

    ###################################################
    # MySQL Deployment
    ###################################################
    deploy-mysql-storage:
        desc: Deploy resources for mysql db
        cmds: 
        - kubectl apply -f ./manifests/mysql/mysql-storage.yaml
    deploy-mysql:
        desc: Deploy resources for mysql db
        cmds: 
        - kubectl apply -f ./manifests/mysql/service.yaml
        - kubectl apply -f ./manifests/mysql/deployment.yaml

    ###################################################
    # Redis Deployment
    ###################################################
    deploy-redis:
        desc: Deploy resources for redis cache
        cmds: 
        - kubectl apply -f ./manifests/redis/deployment.yaml
        - kubectl apply -f ./manifests/redis/service.yaml

    ###################################################
    # MYSQL Migrator/Seeder Jobs
    ###################################################
    build-migrator:
        desc: Build the SQL migrator job image
        cmds: 
        - docker build -t localhost:5001/go_migrator:latest ./migrations
        - docker push localhost:5001/go_migrator:latest
    deploy-migrator:
        desc: Deploy migrator job
        cmds: 
        - kubectl apply -f ./manifests/migrator/job.yaml
    build-seeder:
        desc: Build the SQL seeder job image
        cmds: 
        - docker build -t localhost:5001/go_seeder:latest ./seeds
        - docker push localhost:5001/go_seeder:latest
    deploy-seeder:
        desc: Deploy seeder job
        cmds: 
        - kubectl apply -f ./manifests/seeder/job.yaml
    newmigration:
        desc: Create a new migration file. Example - task newmigration -- add_new_cols
        cmds:
        - goose -dir ./migrations/schemas create {{.CLI_ARGS}} sql
    newseed:
        desc: Create a new seed file. Example - task newseed -- add_dummy_rows
        cmds:
        - goose -dir ./seeds/seed-files create {{.CLI_ARGS}} sql

